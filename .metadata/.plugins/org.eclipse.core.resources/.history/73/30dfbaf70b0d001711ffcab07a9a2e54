package main;

import java.awt.Color;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.List;

public class Tile {

	int width;
	int height;
	float temp;
	float tempBuffer;
	Vector pos;
	Vector screenPos;
	Color color;
	
	public Tile(Vector pos){
		this.pos = pos;
		this.screenPos = Vector.mult(pos, 10);
		width = 10;
		height = 10;
		color = Color.white;
	}
	
	public void draw(Graphics2D g, Vector offset){
		this.screenPos = Vector.mult(pos, 10);
		g.setColor(color);
		g.fillRect((int)(screenPos.x + offset.x), (int)(screenPos.y + offset.y), width, height);
	}

	public boolean inViewRange(Camera c) {
		
		boolean out = false;
		
		if(this.pos.x >= c.pos.x && this.pos.x <= c.pos.x + c.width){
			if(this.pos.y >= c.pos.y && this.pos.y <= c.pos.y + c.height){
				out = true;
			}
		}
		
		return out;
	}
	
	private List<Tile> getNeighbors(){
		
		List<Tile> neighbors = new ArrayList<Tile>();
		
		Pair coordN = new Pair((int)this.pos.x,(int)this.pos.y - 1);
		Pair coordS = new Pair((int)this.pos.x,(int)this.pos.y + 1);
		Pair coordE = new Pair((int)this.pos.x + 1,(int)this.pos.y);
		Pair coordW = new Pair((int)this.pos.x - 1,(int)this.pos.y);
		
		neighbors.add(Main.world.tiles.get(coordN.hashCode()));
		neighbors.add(Main.world.tiles.get(coordS.hashCode()));
		neighbors.add(Main.world.tiles.get(coordE.hashCode()));
		neighbors.add(Main.world.tiles.get(coordW.hashCode()));
		
		return neighbors;
		
	}
	
	public void simulate(){
		
		for(Tile t : getNeighbors()){
			
			if(t != null && t.temp < this.temp){
				
				t.tempBuffer += this.temp/4;
				Main.world.activeTilesBuffer.add(t);
				
			}
			
		}
		
		if(this.temp < 1){
			Main.world.activeTilesBuffer.remove(this);
		}
		
		if(this.temp > 1){
			this.color = Color.RED;
			System.out.println("red");
		}
		
		this.temp = this.tempBuffer;
		
	}
	
}
