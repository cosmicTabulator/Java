import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Panel;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.KeyStroke;
import javax.swing.Timer;

public class master{
	
	static Dimension screenSize;
	
	static int height;
	static int width;
	
	static BufferedImage image;
	static JFrame frame;
	static JLabel space;
	
	public master(){
		
		image = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);
		space = new JLabel(new ImageIcon(image));
		
		Graphics g = image.getGraphics();
		g.setColor(Color.BLACK);
		g.fillRect(0, 0, width, height);
		g.dispose();
		
//		ActionListener listener = new ActionListener() {
//			public void actionPerformed(ActionEvent ae){
//				setRed();
//			}
//		};
//		Timer timer = new Timer(1000, listener);
//		timer.start();
		
		KeyListener key = new KeyListener(){

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				 if (e.getKeyCode() == KeyEvent.VK_R){
					 setRed();
				 }
				 if (e.getKeyCode() == KeyEvent.VK_B){
					 setBlue();
				 }
				 if (e.getKeyCode() == KeyEvent.VK_G){
					 setGreen();
				 }
				 if (e.getKeyCode() == KeyEvent.VK_W){
					 setWhite();
				 }
				 if (e.getKeyCode() == KeyEvent.VK_Q){
					 System.exit(0);
				 }
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}};
		
		frame.addKeyListener(key);
		
		GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
		
		gd.setFullScreenWindow(frame);
		
	}
	
	public void setRed(){
		Graphics g = image.getGraphics();
		g.setColor(Color.RED);
		g.fillRect(width/2, height/2, 2, 1);
		g.dispose();
		space.repaint();
	}
	
	public void setBlue(){
		Graphics g = image.getGraphics();
		g.setColor(Color.BLUE);
		g.fillRect(width/2, height/2, 2, 1);
		g.dispose();
		space.repaint();
	}
	
	public void setGreen(){
		Graphics g = image.getGraphics();
		g.setColor(Color.GREEN);
		g.fillRect(width/2, height/2, 2, 1);
		g.dispose();
		space.repaint();
	}
	
	public void setWhite(){
		Graphics g = image.getGraphics();
		g.setColor(Color.WHITE);
		g.fillRect(width/2, height/2, 2, 1);
		g.dispose();
		space.repaint();
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		
		height = screenSize.height;
		width = screenSize.width;
		
		frame = new JFrame();
		master canvas = new master();
		frame.setSize(width, height);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setContentPane(canvas.space);
		frame.pack();
		
		frame.setExtendedState(JFrame.MAXIMIZED_BOTH); 
		//frame.setUndecorated(true);
		
		com.apple.eawt.Application.getApplication().requestToggleFullScreen(frame);
		
		frame.setVisible(true);
		
	}

}